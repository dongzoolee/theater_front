[{"/home/ubuntu/docker/html/react_/react/src/index.js":"1","/home/ubuntu/docker/html/react_/react/src/App.js":"2","/home/ubuntu/docker/html/react_/react/src/components/Main.js":"3","/home/ubuntu/docker/html/react_/react/src/components/Header/Header.js":"4","/home/ubuntu/docker/html/react_/react/src/components/Story/Story.js":"5","/home/ubuntu/docker/html/react_/react/src/components/Comment/Comment.js":"6","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteComment.js":"7","/home/ubuntu/docker/html/react_/react/src/components/Comment/MainComment/MainComment.js":"8","/home/ubuntu/docker/html/react_/react/src/components/Comment/SubComment/SubComment.js":"9","/home/ubuntu/docker/html/react_/react/src/components/Story/ReadStory/ReadStory.js":"10","/home/ubuntu/docker/html/react_/react/src/components/Story/WriteStory/WriteStory.js":"11","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteAnonyComment.js":"12"},{"size":247,"mtime":1610643635806,"results":"13","hashOfConfig":"14"},{"size":569,"mtime":1610810377927,"results":"15","hashOfConfig":"14"},{"size":1505,"mtime":1610861100030,"results":"16","hashOfConfig":"14"},{"size":693,"mtime":1610709611446,"results":"17","hashOfConfig":"14"},{"size":1443,"mtime":1610806156708,"results":"18","hashOfConfig":"14"},{"size":2029,"mtime":1610819991237,"results":"19","hashOfConfig":"14"},{"size":1848,"mtime":1610819757579,"results":"20","hashOfConfig":"14"},{"size":882,"mtime":1610819161840,"results":"21","hashOfConfig":"14"},{"size":885,"mtime":1610805145819,"results":"22","hashOfConfig":"14"},{"size":2711,"mtime":1610819596400,"results":"23","hashOfConfig":"14"},{"size":4962,"mtime":1610821158385,"results":"24","hashOfConfig":"14"},{"size":2622,"mtime":1610821148134,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"tuq06w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/home/ubuntu/docker/html/react_/react/src/index.js",[],["59","60"],"/home/ubuntu/docker/html/react_/react/src/App.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Main.js",["61","62"],"/home/ubuntu/docker/html/react_/react/src/components/Header/Header.js",["63","64"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className={styles.header}>\n                <span className={styles.loginIcon}>로그인</span>\n                <span className={styles.headerIcon}>인기글</span>\n                <span className={styles.headerIcon}> 내가 작성한 댓글</span >\n                <span className={styles.headerIcon}>알림</span>\n                <span className={styles.thsixIcon}><Link to=\"/\">36부작</Link></span>\n            </div >\n        )\n    }\n}\nexport default Header;\n","/home/ubuntu/docker/html/react_/react/src/components/Story/Story.js",["65","66","67","68","69"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './Story.module.css';\nimport '../Story.css';\nimport storyLocationIcon from '../../static/location-1.png';\nimport Comment from '../Comment/Comment';\n\nclass Story extends Component {\n    componentDidMount() {\n        document.getElementById('root').style = \"background-color: \" + this.props.outerColor + \";\";\n        document.getElementsByClassName('storyContainer')[0].style = \"background-color: \" + this.props.innerColor + \";\";\n    }\n    render() {\n        return (\n            <div className={styles.storyWrapper}>\n                <div className={styles.storyCategory}>\n                    <span className={styles.mainCategory}>{this.props.mainCategory}&nbsp;/&nbsp;</span>\n                    <span className={styles.subCategory}>{this.props.subCategory}</span>\n                </div>\n                <div className={styles.storyTitle}>{this.props.storyTitle}</div>\n                <div className={styles.storyDate}>{this.props.storyDate}</div>\n                <div className={styles.storyLocationIcon}><img src={storyLocationIcon} /></div>\n                <div className={styles.storyLocation}>{this.props.storyLocation}</div>\n                <div className={styles.storyContent}><span dangerouslySetInnerHTML={{ __html: this.props.storyContent }} /></div>\n            </div>\n        )\n    }\n}\nexport default Story;\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/Comment.js",["70","71","72","73"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './Comment.module.scss';\nimport WriteAnonyComment from './WriteComment/WriteAnonyComment';\nimport SubComment from './SubComment/SubComment';\nimport MainComment from './MainComment/MainComment';\nimport axios from 'axios';\n\nclass Comment extends Component {\n    constructor() {\n        super();\n        this.state = {\n            commentCnt: 0,\n            comment: [],\n        }\n    }\n    componentDidMount = () => {\n        let url = window.location.href;\n        let urlSplit = url.split('/');\n        axios\n            .post('/api/read/comment', { id: urlSplit[urlSplit.indexOf('story') + 1] })\n            .then(res => {\n                this.setState({\n                    commentCnt: res.data.cnt,\n                    comment: res.data.comment\n                })\n                console.log(this.state.comment)\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    }\n    render() {\n        return (\n            <div className={styles.commentContainer}>\n                <div className={styles.commentCount}>댓글 {this.state.commentCnt}개</div>\n                <div className={styles.MainSubCommentWrapper}>\n                    {this.state.comment.map((val, idx) => {\n                        return (\n                            <>\n                                <MainComment\n                                    writer={val.writer == '-1' ? '익명' : val.writer}\n                                    date={val.date}\n                                    content={val.content} />\n                                {/* <div className={styles.SubCommentWrapper}>\n                                    <SubComment />\n                                </div> */}\n                            </>\n                        );\n                    })}\n                </div>\n                <WriteAnonyComment />\n            </div>\n        )\n    }\n}\nexport default Comment;\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteComment.js",["74","75","76"],"/home/ubuntu/docker/html/react_/react/src/components/Comment/MainComment/MainComment.js",["77","78","79","80"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './MainComment.module.scss';\nimport profileImg from '../../../static/userImg-2.jpg';\n\nclass MainComment extends Component {\n    render() {\n        return (\n            <div className={styles.commentContainer}>\n                <div className={styles.profileImgWrapper}><img style={{ width: '100%', height: '100%' }} src={profileImg} draggable=\"false\" /></div>\n                <div className={styles.commentContentWrapper}>\n                    <div className={styles.commentName}>{this.props.writer}</div>\n                    <div className={styles.commentDate}>{this.props.date}</div>\n                    <div className={styles.commentContent}>{this.props.content}</div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default MainComment;\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/SubComment/SubComment.js",["81","82","83","84"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './SubComment.module.scss';\nimport profileImg from '../../../static/userImg-2.jpg';\n\nclass SubComment extends Component {\n    render() {\n        return (\n            <div className={styles.commentContainer}>\n                <div className={styles.profileImgWrapper}><img style={{ width: '100%', height: '100%' }} src={profileImg} /></div>\n                <div className={styles.commentContentWrapper}>\n                    <div className={styles.commentName}>이동주</div>\n                    <div className={styles.commentDate}>2021년 2월 29일</div>\n                    <div className={styles.commentContent}>ㅋㅋㅋ 내용이 재밌네요 가끔 들를게요~</div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default SubComment;\n","/home/ubuntu/docker/html/react_/react/src/components/Story/ReadStory/ReadStory.js",["85","86"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './ReadStory.module.css';\nimport axios from 'axios';\nimport Header from '../../Header/Header'\nimport Story from '../Story'\nimport Comment from '../../Comment/Comment'\nimport '../../Story.css';\n\nclass ReadStory extends Component {\n    constructor() {\n        super();\n        this.state = {\n            outerColor: \"\",\n            innerColor: \"\",\n            mainCategory: \"\",\n            subCategory: \"\",\n            title: \"\",\n            date: \"\",\n            location: \"\",\n            content: \"\",\n            commentCnt: \"\",\n            comment: []\n        }\n    }\n    componentDidMount = () => {\n        // GET Story\n        let url = window.location.href;\n        let urlSplit = url.split('/');\n        axios\n            .post('/api/read/story', { id: urlSplit[urlSplit.indexOf('story') + 1] })\n            .then((res) => {\n                this.setState({\n                    outerColor: res.data.outerColor,\n                    innerColor: res.data.innerColor,\n                    mainCategory: res.data.mainCategory,\n                    subCategory: res.data.subCategory,\n                    title: res.data.title,\n                    date: res.data.date,\n                    location: res.data.location,\n                    content: res.data.content\n                })\n            })\n        // GET Comments\n        axios\n            .post('/api/read/comment', { id: urlSplit[urlSplit.indexOf('story') + 1] })\n            .then((res) => {\n                this.setState({\n                    commentCnt: res.data.cnt,\n                    comment: res.data.comment\n                })\n                \n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }\n    render() {\n        return (\n            <>\n                <Header />\n                <div className=\"storyContainer\">\n                    <Story\n                        outerColor={\"#F1F1F1\"}\n                        innerColor={\"#FFFFFF\"}\n                        mainCategory={this.state.mainCategory}\n                        subCategory={this.state.subCategory}\n                        storyTitle={this.state.title}\n                        storyDate={this.state.date}\n                        storyLocation={this.state.location}\n                        storyContent={[this.state.content]}\n                    />\n                    <Comment\n                        commentCnt={this.state.commentCnt}\n                        comment={this.state.comment}\n                    />\n                </div>\n            </>\n        );\n    }\n}\nexport default withRouter(ReadStory);\n","/home/ubuntu/docker/html/react_/react/src/components/Story/WriteStory/WriteStory.js",["87"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Header from '../../Header/Header';\nimport styles from './WriteStory.module.css';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport { Editor } from '@toast-ui/react-editor';\nimport axios from 'axios';\n\nclass WriteStory extends Component {\n    editorRef = React.createRef();\n    constructor() {\n        super();\n        this.state = {\n            preload: {\n                mainCategory: [],\n                subCategory: []\n            },\n            input: {\n                mainCategory: \"\",\n                subCategory: \"\",\n                title: \"\",\n                location: \"\",\n                content: \"\",\n            }\n        }\n    }\n    componentDidMount = () => {\n        // get Main Categories\n        console.log(this.state)\n        axios\n            .get('/api/read/categories?data=main')\n            .then((res) => {\n                this.setState({\n                    preload: {\n                        mainCategory: res.data.mainCategory,\n                        subCategory: this.state.preload.subCategory\n                    }\n                })\n            })\n            .catch((err) => { console.error(err) });\n    }\n    getSubCategory = (e) => {\n        axios\n            .get('/api/read/categories?data=sub&mainId=' + e.target.value)\n            .then((res) => {\n                this.setState({\n                    preload: {\n                        mainCategory: this.state.preload.mainCategory,\n                        subCategory: res.data.subCategory\n                    }\n                })\n                console.log(this.state)\n            })\n            .catch((err) => { console.error(err) });\n    }\n    handleUpdate = () => {\n        let nextState = {};\n        nextState['input'] = {};\n        nextState['input']['mainCategory'] = document.getElementsByClassName('mainCategory')[0].value;\n        nextState['input']['subCategory'] = document.getElementsByClassName('subCategory')[0].value;\n        nextState['input']['title'] = document.getElementsByTagName('input')[0].value;\n        nextState['input']['location'] = document.getElementsByTagName('input')[1].value;\n        nextState['input']['content'] = this.editorRef.current.getInstance().getHtml();\n        this.setState(nextState)\n    }\n    handleSubmit = () => {\n        const data = {\n            main: this.state.input.mainCategory,\n            sub: this.state.input.subCategory,\n            title: this.state.input.title,\n            location: this.state.input.location,\n            content: this.state.input.content\n        };\n        if (data.main === '-1' || data.sub === '-1')\n            return alert('카테고리를 선택해주세요');\n\n        axios\n            .post('/api/write/story', data)\n            .then((res) => {\n                window.location.reload();\n            })\n            .catch((err) => { console.error(err) });\n    }\n    render() {\n        return (\n            <>\n                <Header />\n                <div className=\"storyContainer\">\n                    <select name='mainCategory' className='mainCategory' onChange={e => { this.getSubCategory(e) }}>\n                        <option value=\"-1\">선택</option>\n                        {this.state.preload.mainCategory.map((val, idx) => {\n                            return (\n                                <option value={val.mainIdx}>{val.mainCategory}</option>\n                            )\n                        })}\n                    </select>\n                    <select name='subCategory' className='subCategory'>\n                        <option value=\"-1\">선택</option>\n                        {this.state.preload.subCategory.map((val, idx) => {\n                            return (\n                                <option value={val.subIdx}>{val.subCategory}</option>\n                            )\n                        })}\n                    </select>\n                    <input\n                        className={styles.storyTitle}\n                        placeholder=\"제목을 입력하세요\"\n                        onChange={this.handleUpdate}\n                    />\n                    <input\n                        className={styles.storyLocation}\n                        placeholder=\"장소를 입력하세요\"\n                        onChange={this.handleUpdate}\n                    />\n                    <Editor\n                        previewStyle=\"vertical\"\n                        height=\"600px\"\n                        initialEditType=\"markdown\"\n                        ref={this.editorRef}\n                        onChange={this.handleUpdate}\n                    />\n                    <button >임시저장</button>\n                    <button onClick={this.handleSubmit}>제출</button>\n                </div>\n            </>\n        )\n    }\n}\nexport default withRouter(WriteStory);\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteAnonyComment.js",["88","89","90"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './WriteAnonyComment.module.scss';\nimport axios from 'axios';\n\nclass WriteComment extends Component {\n    constructor() {\n        super();\n        this.state = {\n            storyId: \"\",\n            writer: \"\",\n            content: \"\",\n            ip: \"\"\n        }\n    }\n    componentDidMount = () => {\n        let url = window.location.href;\n        let urlSplit = url.split('/');\n        this.setState({\n            storyId: urlSplit[urlSplit.indexOf('story') + 1]\n        })\n        axios\n            .get('https://api.ipify.org?format=json')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    ip: res.data.ip\n                })\n            })\n            .catch(err => { })\n    }\n    onChangeEvent = () => {\n        this.setState({\n            writer: document.querySelector('input').value,\n            content: document.querySelector('textarea').value\n        })\n    }\n    handleSubmit = () => {\n        const data = {\n            storyId: this.state.storyId,\n            writer: this.state.writer,\n            content: this.state.content,\n            ip: this.state.ip\n        };\n        if (data.writer === \"\")\n            return alert('이름을 입력해주세요');\n        else if (data.content === \"\")\n            return alert('내용을 입력해주세요');\n        else\n            axios\n                .post('/api/write/anonycomment', data)\n                .then((res) => {\n                    window.location.reload();\n                })\n                .catch((err) => { console.error(err) });\n    }\n    render() {\n        return (\n            <div className={styles.colorContainer}>\n                <div className={styles.container}>\n                    <div className={styles.header}>\n                        <input className={styles.writer} maxLength=\"18\" placeholder=\"이름을 입력하세요\" onChange={this.onChangeEvent} />\n                        <div className={styles.date}>{[new Date().getFullYear(), \"년 \", new Date().getMonth() + 1, \"월 \", new Date().getDate(), \"일\"]}</div>\n                        <div className={styles.flexGrow} />\n                        <div className={styles.emoji}></div>\n                        <div className={styles.commitBtn} onClick={this.handleSubmit}>커밋</div>\n                    </div>\n                    <textarea className={styles.content} onChange={this.onChangeEvent} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default WriteComment;\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":15},{"ruleId":"95","severity":1,"message":"100","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"100","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":22,"column":59,"nodeType":"104","endLine":22,"endColumn":90},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"105","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":42,"column":56,"nodeType":"108","messageId":"109","endLine":42,"endColumn":58},{"ruleId":"95","severity":1,"message":"100","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"100","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":10,"column":59,"nodeType":"104","endLine":10,"endColumn":143},{"ruleId":"95","severity":1,"message":"100","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":10,"column":59,"nodeType":"104","endLine":10,"endColumn":125},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"110","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"100","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Comment' is defined but never used.","'Fragment' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SubComment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]