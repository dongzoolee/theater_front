[{"/home/ubuntu/docker/html/react_/react/src/index.js":"1","/home/ubuntu/docker/html/react_/react/src/App.js":"2","/home/ubuntu/docker/html/react_/react/src/components/Main.js":"3","/home/ubuntu/docker/html/react_/react/src/components/Header/Header.js":"4","/home/ubuntu/docker/html/react_/react/src/components/Story/Story.js":"5","/home/ubuntu/docker/html/react_/react/src/components/Comment/Comment.js":"6","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteComment.js":"7","/home/ubuntu/docker/html/react_/react/src/components/Comment/MainComment/MainComment.js":"8","/home/ubuntu/docker/html/react_/react/src/components/Comment/SubComment/SubComment.js":"9","/home/ubuntu/docker/html/react_/react/src/components/Story/ReadStory/ReadStory.js":"10","/home/ubuntu/docker/html/react_/react/src/components/Story/WriteStory/WriteStory.js":"11","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteAnonyComment.js":"12","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteSubComment.js":"13"},{"size":247,"mtime":1610643635806,"results":"14","hashOfConfig":"15"},{"size":574,"mtime":1610887355779,"results":"16","hashOfConfig":"15"},{"size":1505,"mtime":1610861100030,"results":"17","hashOfConfig":"15"},{"size":693,"mtime":1610709611446,"results":"18","hashOfConfig":"15"},{"size":1196,"mtime":1610932699761,"results":"19","hashOfConfig":"15"},{"size":7647,"mtime":1610953148343,"results":"20","hashOfConfig":"15"},{"size":1848,"mtime":1610819757579,"results":"21","hashOfConfig":"15"},{"size":1531,"mtime":1610951136826,"results":"22","hashOfConfig":"15"},{"size":1777,"mtime":1610950929632,"results":"23","hashOfConfig":"15"},{"size":2961,"mtime":1610950406044,"results":"24","hashOfConfig":"15"},{"size":4962,"mtime":1610821158385,"results":"25","hashOfConfig":"15"},{"size":2434,"mtime":1610953184890,"results":"26","hashOfConfig":"15"},{"size":2374,"mtime":1610953074780,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"tuq06w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"/home/ubuntu/docker/html/react_/react/src/index.js",[],["63","64"],"/home/ubuntu/docker/html/react_/react/src/App.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Main.js",["65","66"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Story from './Story/Story';\nimport Comment from './Comment/Comment';\n\nclass Main extends Component {\n    render() {\n        return (\n            <>\n                <Header />\n                <div className=\"storyContainer\">\n                    <Story\n                        outerColor={\"#F1F1F1\"}\n                        innerColor={\"#FFFFFF\"}\n                        mainCategory={\"일기\"}\n                        subCategory={\"개발일기\"}\n                        storyTitle={\"쉬다가세요\"}\n                        storyDate={\"2021년 1월 4일 오후 9시\"}\n                        storyLocation={\"서울시 마포구\"}\n                        storyContent={`<span>어서오세요</span><br/>\n                    <span>모두가 쉬어갈 수 있는 블로그를 만들었습니다</span>,<br/><br/>\n                    <span>기본적으로 익명댓글 작성이 가능합니다.</span><br/>\n                    <span>로그인 하시면 본인의 댓글에 대한 답글 알림을 받아보실 수 있으며,</span><br/>\n                    <span>본인이 작성한 댓글을 한 곳에서 모아보실 수 있습니다.</span><br/><br/>\n                    <span>다시 한 번 반갑습니다.</span>\n                    `}\n                    />\n                </div>\n\n            </>\n        )\n    }\n}\nexport default withRouter(Main);\n","/home/ubuntu/docker/html/react_/react/src/components/Header/Header.js",["67","68"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className={styles.header}>\n                <span className={styles.loginIcon}>로그인</span>\n                <span className={styles.headerIcon}>인기글</span>\n                <span className={styles.headerIcon}> 내가 작성한 댓글</span >\n                <span className={styles.headerIcon}>알림</span>\n                <span className={styles.thsixIcon}><Link to=\"/\">36부작</Link></span>\n            </div >\n        )\n    }\n}\nexport default Header;\n","/home/ubuntu/docker/html/react_/react/src/components/Story/Story.js",["69","70","71","72","73"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './Story.module.css';\nimport '../Story.css';\nimport storyLocationIcon from '../../static/icons/location-1.png';\nimport Comment from '../Comment/Comment';\n\nclass Story extends Component {\n    render() {\n        return (\n            <div className={styles.storyWrapper}>\n                <div className={styles.storyCategory}>\n                    <span className={styles.mainCategory}>{this.props.mainCategory}&nbsp;/&nbsp;</span>\n                    <span className={styles.subCategory}>{this.props.subCategory}</span>\n                </div>\n                <div className={styles.storyTitle}>{this.props.storyTitle}</div>\n                <div className={styles.storyDate}>{this.props.storyDate}</div>\n                <div className={styles.storyLocationIcon}><img src={storyLocationIcon} /></div>\n                <div className={styles.storyLocation}>{this.props.storyLocation}</div>\n                <div className={styles.storyContent}><span dangerouslySetInnerHTML={{ __html: this.props.storyContent }} /></div>\n            </div>\n        )\n    }\n}\nexport default Story;\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/Comment.js",["74","75","76","77","78","79","80","81","82"],"/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteComment.js",["83","84","85"],"/home/ubuntu/docker/html/react_/react/src/components/Comment/MainComment/MainComment.js",["86","87","88","89"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './MainComment.module.scss';\nimport '../Comment.scss';\nimport sirenImg from '../../../static/icons/siren-1.png';\n\nclass MainComment extends Component {\n    state = {\n        userIcon: (Math.floor(Math.random() * 4) + 1)\n    }\n    openSubCommentWindow = (e) => {\n        this.setState({ toggle: !this.state.toggle })\n        e.target.parentElement.parentElement.nextElementSibling.classList.toggle('hide')\n    }\n    render() {\n        return (\n            <>\n\n                <div className={styles.commentContainer}>\n                    <div className=\"profileImgWrapper\"><img style={{ width: '100%', height: '100%' }} src={process.env.PUBLIC_URL + '/icons/userIcon-' + this.state.userIcon + '.jpg'} draggable=\"false\" /></div>\n                    <div className={styles.commentContentWrapper}>\n                        <div className=\"commentWriter\">{this.props.writer}</div>\n                        <div className=\"commentDate\">{this.props.date}</div>\n                        <div className=\"sirenImgWrapper\"><img src={sirenImg} /></div>\n                        <div className=\"writeSubComment not--draggable\" onClick={(e) => this.openSubCommentWindow(e)}>{!this.state.toggle ? \"답글\" : \"답글 닫기\"}</div>\n                        <div className=\"commentContent\">{this.props.content}</div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\nexport default MainComment;\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/SubComment/SubComment.js",["90","91","92","93","94"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport styles from './SubComment.module.scss';\nimport '../Comment.scss';\nimport sirenImg from '../../../static/icons/siren-1.png';\nimport WriteSubComment from '../WriteComment/WriteSubComment';\n\nclass SubComment extends Component {\n    state = {\n        toggle: false,\n        userIcon: (Math.floor(Math.random() * 4) + 1)\n    }\n    openSubCommentWindow = (e) => {\n        this.setState({ toggle: !this.state.toggle })\n    }\n    render() {\n        return (\n            <>\n                <div className={styles.commentContainer}>\n                    <div className=\"profileImgWrapper\"><img style={{ width: '100%', height: '100%' }} src={process.env.PUBLIC_URL + '/icons/userIcon-' + this.state.userIcon + '.jpg'} /></div>\n                    <div className={styles.commentContentWrapper}>\n                        <div className=\"commentWriter\">{this.props.writer === '-1' ? \"익명\" : this.props.writer}</div>\n                        <div className=\"commentDate\">{this.props.date}</div>\n                        <div className=\"sirenImgWrapper\"><img src={sirenImg} /></div>\n                        <div className=\"writeSubComment not--draggable\" onClick={(e) => this.openSubCommentWindow(e)}>{!this.state.toggle ? \"답글\" : \"답글 닫기\"}</div>\n                        <div className=\"commentContent\">{this.props.content}</div>\n                    </div>\n                </div>\n                {this.state.toggle && (\n                    <WriteSubComment\n                        targetMainId={this._reactInternals.key.split('_')[0]}\n                    />\n                )}\n            </>\n        )\n    }\n}\nexport default SubComment;\n","/home/ubuntu/docker/html/react_/react/src/components/Story/ReadStory/ReadStory.js",["95","96"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './ReadStory.module.css';\nimport axios from 'axios';\nimport Header from '../../Header/Header'\nimport Story from '../Story'\nimport Comment from '../../Comment/Comment'\nimport '../../Story.css';\n\nclass ReadStory extends Component {\n    constructor() {\n        super();\n        this.state = {\n            outerColor: \"\",\n            innerColor: \"\",\n            mainCategory: \"\",\n            subCategory: \"\",\n            title: \"\",\n            date: \"\",\n            location: \"\",\n            content: \"\",\n            commentCnt: \"\",\n            comment: []\n        }\n    }\n    componentDidMount = () => {\n        // GET Story\n        let url = window.location.href;\n        let urlSplit = url.split('/');\n        axios\n            .post('/api/read/story', { id: urlSplit[urlSplit.indexOf('story') + 1] })\n            .then((res) => {\n                this.setState({\n                    outerColor: res.data.outerColor,\n                    innerColor: res.data.innerColor,\n                    mainCategory: res.data.mainCategory,\n                    subCategory: res.data.subCategory,\n                    title: res.data.title,\n                    date: res.data.date,\n                    location: res.data.location,\n                    content: res.data.content\n                })\n                document.getElementsByTagName('html')[0].style = \"background-color: \" + res.data.outerColor + \";\";\n                document.getElementsByClassName('storyContainer')[0].style = \"background-color: \" + res.data.innerColor + \";\";\n            })\n        // GET Comments\n        axios\n            .post('/api/read/comment', { id: urlSplit[urlSplit.indexOf('story') + 1] })\n            .then((res) => {\n                this.setState({\n                    commentCnt: res.data.cnt,\n                    comment: res.data.comment\n                })\n\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n    }\n    render() {\n        return (\n            <>\n                <Header />\n                <div className=\"storyContainer\">\n                    <Story\n                        outerColor={this.state.outerColor}\n                        innerColor={this.state.innerColor}\n                        mainCategory={this.state.mainCategory}\n                        subCategory={this.state.subCategory}\n                        storyTitle={this.state.title}\n                        storyDate={this.state.date}\n                        storyLocation={this.state.location}\n                        storyContent={[this.state.content]}\n                    />\n                    <Comment\n                        commentCnt={this.state.commentCnt}\n                        comment={this.state.comment}\n                    />\n                </div>\n            </>\n        );\n    }\n}\nexport default withRouter(ReadStory);\n","/home/ubuntu/docker/html/react_/react/src/components/Story/WriteStory/WriteStory.js",["97"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Header from '../../Header/Header';\nimport styles from './WriteStory.module.css';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport { Editor } from '@toast-ui/react-editor';\nimport axios from 'axios';\n\nclass WriteStory extends Component {\n    editorRef = React.createRef();\n    constructor() {\n        super();\n        this.state = {\n            preload: {\n                mainCategory: [],\n                subCategory: []\n            },\n            input: {\n                mainCategory: \"\",\n                subCategory: \"\",\n                title: \"\",\n                location: \"\",\n                content: \"\",\n            }\n        }\n    }\n    componentDidMount = () => {\n        // get Main Categories\n        console.log(this.state)\n        axios\n            .get('/api/read/categories?data=main')\n            .then((res) => {\n                this.setState({\n                    preload: {\n                        mainCategory: res.data.mainCategory,\n                        subCategory: this.state.preload.subCategory\n                    }\n                })\n            })\n            .catch((err) => { console.error(err) });\n    }\n    getSubCategory = (e) => {\n        axios\n            .get('/api/read/categories?data=sub&mainId=' + e.target.value)\n            .then((res) => {\n                this.setState({\n                    preload: {\n                        mainCategory: this.state.preload.mainCategory,\n                        subCategory: res.data.subCategory\n                    }\n                })\n                console.log(this.state)\n            })\n            .catch((err) => { console.error(err) });\n    }\n    handleUpdate = () => {\n        let nextState = {};\n        nextState['input'] = {};\n        nextState['input']['mainCategory'] = document.getElementsByClassName('mainCategory')[0].value;\n        nextState['input']['subCategory'] = document.getElementsByClassName('subCategory')[0].value;\n        nextState['input']['title'] = document.getElementsByTagName('input')[0].value;\n        nextState['input']['location'] = document.getElementsByTagName('input')[1].value;\n        nextState['input']['content'] = this.editorRef.current.getInstance().getHtml();\n        this.setState(nextState)\n    }\n    handleSubmit = () => {\n        const data = {\n            main: this.state.input.mainCategory,\n            sub: this.state.input.subCategory,\n            title: this.state.input.title,\n            location: this.state.input.location,\n            content: this.state.input.content\n        };\n        if (data.main === '-1' || data.sub === '-1')\n            return alert('카테고리를 선택해주세요');\n\n        axios\n            .post('/api/write/story', data)\n            .then((res) => {\n                window.location.reload();\n            })\n            .catch((err) => { console.error(err) });\n    }\n    render() {\n        return (\n            <>\n                <Header />\n                <div className=\"storyContainer\">\n                    <select name='mainCategory' className='mainCategory' onChange={e => { this.getSubCategory(e) }}>\n                        <option value=\"-1\">선택</option>\n                        {this.state.preload.mainCategory.map((val, idx) => {\n                            return (\n                                <option value={val.mainIdx}>{val.mainCategory}</option>\n                            )\n                        })}\n                    </select>\n                    <select name='subCategory' className='subCategory'>\n                        <option value=\"-1\">선택</option>\n                        {this.state.preload.subCategory.map((val, idx) => {\n                            return (\n                                <option value={val.subIdx}>{val.subCategory}</option>\n                            )\n                        })}\n                    </select>\n                    <input\n                        className={styles.storyTitle}\n                        placeholder=\"제목을 입력하세요\"\n                        onChange={this.handleUpdate}\n                    />\n                    <input\n                        className={styles.storyLocation}\n                        placeholder=\"장소를 입력하세요\"\n                        onChange={this.handleUpdate}\n                    />\n                    <Editor\n                        previewStyle=\"vertical\"\n                        height=\"600px\"\n                        initialEditType=\"markdown\"\n                        ref={this.editorRef}\n                        onChange={this.handleUpdate}\n                    />\n                    <button >임시저장</button>\n                    <button onClick={this.handleSubmit}>제출</button>\n                </div>\n            </>\n        )\n    }\n}\nexport default withRouter(WriteStory);\n","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteAnonyComment.js",["98","99","100"],"/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteSubComment.js",["101","102","103"],"import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './WriteSubComment.module.scss';\nimport axios from 'axios';\n\nclass WriteSubComment extends Component {\n    constructor() {\n        super();\n        this.state = {\n            writer: \"\",\n            content: \"\"\n        }\n    }\n    onChangeEvent = (e) => {\n        this.setState({\n            writer: e.target.value,\n            content: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        let url = window.location.href;\n        let urlSplit = url.split('/');\n        const data = {\n            targetMainId: this.props.targetMainId,\n            storyId: urlSplit[urlSplit.indexOf('story') + 1],\n            writer: this.state.writer,\n            content: this.state.content\n        };\n\n        if (data.writer === \"\")\n            return alert('이름을 입력해주세요');\n        else if (data.content === \"\")\n            return alert('내용을 입력해주세요');\n        else {\n            axios\n                .get('https://api.ipify.org?format=json')\n                .then(res => {\n                    data.ip = res.data.ip;\n                    axios\n                        .post('/api/write/anonysubcomment', data)\n                        .then((res) => {\n                            window.location.reload();\n                        })\n                        .catch((err) => { console.error(err) });\n                })\n                .catch(err => { })\n        }\n    }\n    render() {\n        return (\n            <div className={styles.container}>\n                <div className={styles.header}>\n                    <input className={styles.writerAnony} maxLength=\"18\" placeholder=\"이름을 입력하세요\" onChange={this.onChangeEvent} />\n                    <div className={styles.date}>{[new Date().getFullYear(), \"년 \", new Date().getMonth() + 1, \"월 \", new Date().getDate(), \"일\"]}</div>\n                    <div className={styles.flexGrow} />\n                    <div className={styles.emoji}></div>\n                    <div className={styles.commitBtn+\" not--draggable\"} onClick={(e) => { this.handleSubmit(e) }}>커밋</div>\n                </div>\n                <textarea className={styles.content} onChange={this.onChangeEvent} />\n            </div>\n        )\n    }\n}\nexport default WriteSubComment;\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":15},{"ruleId":"108","severity":1,"message":"113","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"113","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":18,"column":59,"nodeType":"117","endLine":18,"endColumn":90},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":39,"column":62,"nodeType":"120","messageId":"121","endLine":39,"endColumn":64},{"ruleId":"122","severity":1,"message":"123","line":41,"column":25,"nodeType":"124","messageId":"125","endLine":137,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":48,"column":72,"nodeType":"128","messageId":"129","endLine":48,"endColumn":74},{"ruleId":"126","severity":1,"message":"127","line":63,"column":72,"nodeType":"128","messageId":"129","endLine":63,"endColumn":74},{"ruleId":"126","severity":1,"message":"127","line":87,"column":68,"nodeType":"128","messageId":"129","endLine":87,"endColumn":70},{"ruleId":"126","severity":1,"message":"127","line":103,"column":68,"nodeType":"128","messageId":"129","endLine":103,"endColumn":70},{"ruleId":"126","severity":1,"message":"127","line":124,"column":68,"nodeType":"128","messageId":"129","endLine":124,"endColumn":70},{"ruleId":"108","severity":1,"message":"113","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":20,"column":56,"nodeType":"117","endLine":20,"endColumn":204},{"ruleId":"115","severity":1,"message":"116","line":24,"column":58,"nodeType":"117","endLine":24,"endColumn":80},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"130","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":21,"column":56,"nodeType":"117","endLine":21,"endColumn":186},{"ruleId":"115","severity":1,"message":"116","line":25,"column":58,"nodeType":"117","endLine":25,"endColumn":80},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"131","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"113","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"113","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Comment' is defined but never used.","'Fragment' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactDOM' is defined but never used.","'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]