[{"/home/ubuntu/docker/html/react_/react/src/index.js":"1","/home/ubuntu/docker/html/react_/react/src/App.js":"2","/home/ubuntu/docker/html/react_/react/src/components/Main.js":"3","/home/ubuntu/docker/html/react_/react/src/components/Header/Header.js":"4","/home/ubuntu/docker/html/react_/react/src/components/Story/Story.js":"5","/home/ubuntu/docker/html/react_/react/src/components/Comment/Comment.js":"6","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteComment.js":"7","/home/ubuntu/docker/html/react_/react/src/components/Comment/MainComment/MainComment.js":"8","/home/ubuntu/docker/html/react_/react/src/components/Comment/SubComment/SubComment.js":"9","/home/ubuntu/docker/html/react_/react/src/components/Story/ReadStory/ReadStory.js":"10","/home/ubuntu/docker/html/react_/react/src/components/Story/WriteStory/WriteStory.js":"11","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteAnonyComment.js":"12","/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteSubComment.js":"13","/home/ubuntu/docker/html/react_/react/src/components/Category/Location/Location.js":"14","/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/StoryComponent.js":"15","/home/ubuntu/docker/html/react_/react/src/components/Category/SubCategory/SubCategory.js":"16","/home/ubuntu/docker/html/react_/react/src/components/Category/MainCategory/MainCategory.js":"17","/home/ubuntu/docker/html/react_/react/src/components/Category/Location/LocationList.js":"18","/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/SubCategoryTemplate.js":"19","/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/MainCategoryTemplate.js":"20","/home/ubuntu/docker/html/react_/react/src/components/StoryLine/StoryLine.js":"21","/home/ubuntu/docker/html/react_/react/src/components/PaginationFooter/PaginationFooter.js":"22","/home/ubuntu/docker/html/react_/react/src/components/SearchBox/SearchBox.js":"23","/home/ubuntu/docker/html/react_/react/src/components/HotStory/HotStory.js":"24","/home/ubuntu/docker/html/react_/react/src/components/Header/HeaderRouter/HeaderRouter.js":"25","/home/ubuntu/docker/html/react_/react/src/components/StoryLine/MobileContentWrapper/MobileContentWrapper.js":"26","/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/MobileCategoryInfo.js":"27","/home/ubuntu/docker/html/react_/react/src/components/Comment/SirenWriteSubWrapper/SirenWriteSubWrapper.js":"28","/home/ubuntu/docker/html/react_/react/src/components/Footer/Footer.js":"29"},{"size":470,"mtime":1611293580734,"results":"30","hashOfConfig":"31"},{"size":1334,"mtime":1611811708617,"results":"32","hashOfConfig":"31"},{"size":1998,"mtime":1611131180186,"results":"33","hashOfConfig":"31"},{"size":1774,"mtime":1611767851632,"results":"34","hashOfConfig":"31"},{"size":1747,"mtime":1611760071593,"results":"35","hashOfConfig":"31"},{"size":7519,"mtime":1611942520308,"results":"36","hashOfConfig":"31"},{"size":1848,"mtime":1610819757579,"results":"37","hashOfConfig":"31"},{"size":2028,"mtime":1611585205468,"results":"38","hashOfConfig":"31"},{"size":2786,"mtime":1611767794841,"results":"39","hashOfConfig":"31"},{"size":4044,"mtime":1611900342365,"results":"40","hashOfConfig":"31"},{"size":5569,"mtime":1611943087254,"results":"41","hashOfConfig":"31"},{"size":2899,"mtime":1611854363150,"results":"42","hashOfConfig":"31"},{"size":2931,"mtime":1611856352424,"results":"43","hashOfConfig":"31"},{"size":1450,"mtime":1611116768581,"results":"44","hashOfConfig":"31"},{"size":1277,"mtime":1611485684514,"results":"45","hashOfConfig":"31"},{"size":1932,"mtime":1611116831364,"results":"46","hashOfConfig":"31"},{"size":1947,"mtime":1611116793377,"results":"47","hashOfConfig":"31"},{"size":1209,"mtime":1611116786925,"results":"48","hashOfConfig":"31"},{"size":3134,"mtime":1611484673526,"results":"49","hashOfConfig":"31"},{"size":2747,"mtime":1611938670185,"results":"50","hashOfConfig":"31"},{"size":9962,"mtime":1611476325145,"results":"51","hashOfConfig":"31"},{"size":1911,"mtime":1611196847695,"results":"52","hashOfConfig":"31"},{"size":1041,"mtime":1611196827932,"results":"53","hashOfConfig":"31"},{"size":2093,"mtime":1611214401732,"results":"54","hashOfConfig":"31"},{"size":708,"mtime":1611390812519,"results":"55","hashOfConfig":"31"},{"size":2020,"mtime":1611398813511,"results":"56","hashOfConfig":"31"},{"size":2157,"mtime":1611767754961,"results":"57","hashOfConfig":"31"},{"size":1442,"mtime":1611478301205,"results":"58","hashOfConfig":"31"},{"size":259,"mtime":1611767802021,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"tuq06w",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/ubuntu/docker/html/react_/react/src/index.js",[],["124","125"],"/home/ubuntu/docker/html/react_/react/src/App.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Main.js",[],["126","127"],"/home/ubuntu/docker/html/react_/react/src/components/Header/Header.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Story/Story.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Comment/Comment.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteComment.js",["128","129","130"],"/home/ubuntu/docker/html/react_/react/src/components/Comment/MainComment/MainComment.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Comment/SubComment/SubComment.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Story/ReadStory/ReadStory.js",["131","132"],"import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../../Header/Header'\nimport Story from '../Story'\nimport Comment from '../../Comment/Comment'\nimport '../../Story.css';\nimport AdfitWebComponent from 'react-adfit-web-component'\nimport Footer from '../../Footer/Footer'\n\nclass ReadStory extends React.PureComponent {\n    constructor() {\n        super();\n        this.state = {\n            outerColor: \"\",\n            innerColor: \"\",\n            mainCategory: \"\",\n            subCategory: \"\",\n            title: \"\",\n            date: \"\",\n            location: \"\",\n            content: \"\",\n            commentCnt: \"\",\n            comment: [],\n            toShowAd: false\n        }\n    }\n    componentDidMount() {\n        // GET Story\n        axios\n            .get('https://ip.leed.at')\n            .then(res => {\n                axios\n                    .post('/api/read/story',\n                        {\n                            id: this.props.match.params.id,\n                            ip: res.data.ip\n                        })\n                    .then((res) => {\n                        this.setState({\n                            outerColor: res.data.outerColor,\n                            innerColor: res.data.innerColor,\n                            mainCategory: res.data.mainCategory,\n                            subCategory: res.data.subCategory,\n                            title: res.data.title,\n                            date: res.data.date,\n                            location: res.data.location,\n                            content: res.data.content\n                        })\n                        document.getElementsByTagName('html')[0].style = \"background-color: \" + res.data.outerColor + \";\";\n                        document.getElementsByClassName('storyContainer')[0].style = \"background-color: \" + res.data.innerColor + \";\";\n                    })\n            })\n        // GET Comments\n        axios\n            .post('/api/read/comment', { id: this.props.match.params.id })\n            .then((res) => {\n                this.setState({\n                    commentCnt: res.data.cnt,\n                    comment: res.data.comment\n                })\n\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n        window.onload = () => {\n            document.querySelectorAll('img').forEach(ele => {\n                ele.setAttribute('draggable', 'false')\n                ele.style.maxWidth = \"100%\";\n            })\n\n        }\n    }\n    componentDidUpdate() {\n        document.querySelectorAll('img').forEach(ele => {\n            ele.setAttribute('draggable', 'false')\n            ele.style.maxWidth = \"100%\";\n        })\n        setTimeout(() => {\n            if (!this.state.toShowAd)\n                this.setState({\n                    toShowAd: true\n                })\n        }, 2000)\n    }\n\n    render() {\n        return (\n            <>\n                <Header />\n                <div className=\"storyContainer\">\n                    <Story\n                        outerColor={this.state.outerColor}\n                        innerColor={this.state.innerColor}\n                        mainCategory={this.state.mainCategory}\n                        subCategory={this.state.subCategory}\n                        storyTitle={this.state.title}\n                        storyDate={this.state.date}\n                        storyLocation={this.state.location}\n                        storyContent={[this.state.content]}\n                    />\n                    {/* {this.state.toShowAd ? <AdfitWebComponent\n                        adUnit=\"DAN-zrThBYMLPyPfF7zx\"\n                    /> : \"\"} */}\n                    <Comment\n                        commentCnt={this.state.commentCnt}\n                        comment={this.state.comment}\n                    />\n                </div>\n                <Footer />\n            </>\n        );\n    }\n}\nexport default withRouter(ReadStory);\n","/home/ubuntu/docker/html/react_/react/src/components/Story/WriteStory/WriteStory.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteAnonyComment.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Comment/WriteComment/WriteSubComment.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/Location/Location.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/StoryComponent.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/SubCategory/SubCategory.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/MainCategory/MainCategory.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/Location/LocationList.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/SubCategoryTemplate.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/MainCategoryTemplate.js",[],"/home/ubuntu/docker/html/react_/react/src/components/StoryLine/StoryLine.js",["133"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Header from '../Header/Header'\nimport { Link } from 'react-router-dom';\nimport styles from './StoryLine.module.scss';\nimport axios from 'axios';\nimport AdfitWebComponent from 'react-adfit-web-component'\nimport MobileContentWrapper from './MobileContentWrapper/MobileContentWrapper';\n\nclass StoryLine extends Component {\n    state = {\n        content: [],\n    }\n    getTextElement = (s) => {\n        let span = document.createElement('span');\n        span.innerHTML = s;\n        return span.textContent || span.innerText;\n    }\n    getImgSrc = (s) => {\n        let regex = /<img.*?src=\"([^\">]*\\/([^\">]*?))\".*?>/g, ret;\n        ret = regex.exec(s);\n        if (ret)\n            return ret[1];\n        else\n            return null;\n    }\n    componentDidMount() {\n        axios\n            .get('/api/read/storylinecontents')\n            .then(res => {\n                this.setState({\n                    content: res.data\n                })\n            })\n            .catch(err => console.log(err))\n        document.querySelector('.header').style.width = \"89%\";\n        document.querySelector('.header').style.maxWidth = \"2300px\";\n    }\n    componentDidUpdate() {\n    }\n    render() {\n        return (\n            <>\n                <Header\n                    isStoryLine={true}\n                />\n                <div className={\"storyContainer \" + styles.MainCategoryWrapper}>\n                    <div className={styles.Header + \" non--draggable\"}>스토리 라인</div>\n                    <div className={styles.MobileContentWrapper}>\n                        <MobileContentWrapper />\n                    </div>\n                    <div className={styles.ContentWrapper}>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <th className={styles.StoryLineTh} style={{ width: '39.1%', padding: '0 0 0.8rem 0.6rem' }}>\n                                        <div className={styles.StoryLineContentWrapper + \" non--draggable\"}>\n                                            <Link to=\"/보물창고\">\n                                                <div className={styles.StoryLineTitle}>보물창고</div>\n\n                                                <div className={styles.StoryLineContent}>{Math.ceil((new Date().getTime() - new Date('2020-08-27').getTime()) / 1000 / 60 / 60 / 24)}일차 개발자의 보물창고. 기억 속에서 사라지기 전에 소중한 기억들을 기록한다.</div>\n                                            </Link>\n                                        </div>\n                                    </th>\n                                    <th className={styles.StoryLineTh} style={{ width: '18.5%' }}>\n                                        <div className={styles.StoryLineContentWrapper + \" non--draggable\"}>\n                                            <Link to=\"/낙서\">\n                                                <div className={styles.StoryLineTitle}>낙서</div>\n                                                <div className={styles.StoryLineContent}>언젠가는 도움될 쓸모있는 낙서들</div>\n                                            </Link>\n                                        </div>\n                                    </th>\n                                    <th className={styles.StoryLineTh} style={{ width: '25.7%' }}>\n                                        <div className={styles.StoryLineContentWrapper + \" non--draggable\"}>\n                                            <Link to=\"/일기\">\n                                                <div className={styles.StoryLineTitle}>일기</div>\n                                                <div className={styles.StoryLineContent}>정돈되지 못한 일상에 질서를 지우기 위한 최소한의 노력</div>\n                                            </Link>\n                                        </div>\n                                    </th>\n                                    <th className={styles.StoryLineTh}>\n                                        <div className={styles.StoryLineContentWrapper + \" non--draggable\"}>\n                                            <Link to=\"/배움\">\n                                                <div className={styles.StoryLineTitle}>배움</div>\n                                                <div className={styles.StoryLineContent}>소중한 시간을 갈아넣어 얻은 배움</div>\n                                            </Link>\n                                        </div>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    {this.state.content.map((val, idx) => {\n                                        if (idx === 0)\n                                            return (\n\n                                                <th className={styles.StoryLineStoryTh} key={idx}>\n                                                    <Link to={\"/story/\" + val.idx}>\n                                                        <div className={styles.BigContainer}>\n                                                            {this.getImgSrc(val.content) ?\n                                                                <>\n                                                                    <div className={styles.BigImg}><img src={this.getImgSrc(val.content)} alt={\"\"} /></div>\n                                                                    <div className={styles.BigTitle}>{val.title}</div>\n                                                                    <div className={styles.BigDate}>{val.date}</div>\n                                                                    <div className={styles.BigContent}>{this.getTextElement(val.content).length >= 60 ? this.getTextElement(val.content).substring(0, 60) : this.getTextElement(val.content)}</div>\n                                                                </> :\n                                                                <>\n                                                                    <div className={styles.BigTitle}>{val.title}</div>\n                                                                    <div className={styles.BigDate}>{val.date}</div>\n                                                                    <div className={styles.BigContent}>{this.getTextElement(val.content).length >= 60 ? this.getTextElement(val.content).substring(0, 120) : this.getTextElement(val.content)}</div>\n                                                                </>\n                                                            }\n                                                        </div>\n                                                    </Link>\n                                                </th>\n                                            )\n                                        else if (idx === 1)\n                                            return (\n                                                <th className={styles.StoryLineStoryTh} key={idx}>\n                                                    <Link to={\"/story/\" + val.idx}>\n                                                        <div className={styles.MidContainer}>\n                                                            <div className={styles.MidImg}><img src={this.getImgSrc(val.content)} alt={\"\"} /></div>\n                                                            <div className={styles.MidTitle}>{val.title}</div>\n                                                            <div className={styles.MidDate}>{val.date}</div>\n                                                        </div>\n                                                    </Link>\n                                                </th>\n                                            )\n                                        else if (idx === 2)\n                                            return (\n                                                <th className={styles.StoryLineStoryTh} key={idx}>\n                                                    <Link to={\"/story/\" + val.idx}>\n                                                        <div className={styles.ContentOnly}>{this.getTextElement(val.content).length >= 100 ? this.getTextElement(val.content).substring(0, 100) : this.getTextElement(val.content)}</div>\n                                                    </Link>\n                                                </th>\n                                            )\n                                        else if (idx === 3)\n                                            return (\n                                                <th className={styles.StoryLineStoryTh} key={idx}>\n                                                    <Link to={\"/story/\" + val.idx}>\n                                                        <div className={styles.SmallContainer}>\n                                                            <div className={styles.SmallTitle}>{val.title}</div>\n                                                            <div className={styles.SmallDate}>{val.date}</div>\n                                                        </div>\n                                                    </Link>\n                                                </th>\n                                            )\n                                        else return (<></>);\n                                    })}\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    {/* <AdfitWebComponent\n                        adUnit=\"DAN-zrThBYMLPyPfF7zx\"\n                    /> */}\n                </div>\n            </>\n        )\n    }\n}\nexport default withRouter(StoryLine);\n","/home/ubuntu/docker/html/react_/react/src/components/PaginationFooter/PaginationFooter.js",[],"/home/ubuntu/docker/html/react_/react/src/components/SearchBox/SearchBox.js",[],["134","135"],"/home/ubuntu/docker/html/react_/react/src/components/HotStory/HotStory.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Header/HeaderRouter/HeaderRouter.js",[],"/home/ubuntu/docker/html/react_/react/src/components/StoryLine/MobileContentWrapper/MobileContentWrapper.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Category/CategoryTemplate/MobileCategoryInfo.js",[],"/home/ubuntu/docker/html/react_/react/src/components/Comment/SirenWriteSubWrapper/SirenWriteSubWrapper.js",["136"],"import React, { Component } from 'react';\nimport styles from './SirenWriteSubWrapper.module.scss';\nimport '../Comment.scss';\nimport sirenImg from '../../../static/icons/siren-1.png';\nimport axios from 'axios';\n\nclass SirenWriteSubWrapper extends Component {\n    state = {\n        toggle: this.props.hasSubComment\n    }\n    openSubCommentWindow = (e) => {\n        this.setState({ toggle: !this.state.toggle })\n        console.log(e.target.closest(\".\" + this.props.parentClass))\n        if (e.target.closest(\".\" + this.props.parentClass))\n            e.target.closest(\".\" + this.props.parentClass).lastElementChild.classList.toggle('hide')\n    }\n    reportComment = (e) => {\n        if (window.confirm('댓글을 신고하시겠습니까?'))\n            axios\n                .post('/api/report/comment', { key: this._reactInternals.key })\n                .then(alert('신고가 정상적으로 처리되었습니다'))\n                .catch(console.error)\n    }\n    render() {\n        return (\n            <>\n                <div className=\"commentDate\">{this.props.date}</div>\n                <div className=\"sirenImgWrapper\" onClick={this.reportComment}><img alt=\"report comment\" src={sirenImg} /></div>\n                <div className=\"writeSubComment non--draggable\" onClick={(e) => this.openSubCommentWindow(e)}>{!this.state.toggle ? \"답글\" : \"답글 닫기\"}</div>\n            </>\n        )\n    }\n}\nexport default SirenWriteSubWrapper;","/home/ubuntu/docker/html/react_/react/src/components/Footer/Footer.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":28,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"147","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":26},{"ruleId":"143","severity":1,"message":"149","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"150","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":25},{"ruleId":"143","severity":1,"message":"150","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":25},{"ruleId":"137","replacedBy":"151"},{"ruleId":"139","replacedBy":"152"},{"ruleId":"143","severity":1,"message":"153","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],["154"],["155"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","'Component' is defined but never used.","'AdfitWebComponent' is defined but never used.",["154"],["155"],"'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]